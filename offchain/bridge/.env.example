# Bridge environment example for Clypr â€” copy to .env and fill values

# Core canister / IC connection
CANISTER_ID=5elod-ciaaa-aaaag-aufgq-cai    # backend canister id
IC_HOST=https://ic0.app                      # e.g. https://ic0.app or http://127.0.0.1:8000 for local dfx

# Agent / identity
# Optional: path to a PEM file containing the bridge identity to call canister methods.
BRIDGE_IDENTITY_PEM=./bridge.pem

# Bridge runtime
PORT=3000
BRIDGE_LIMIT=20            # how many jobs to fetch per nextDispatchJobs call
POLL_INTERVAL_MS=500       # polling interval when no jobs found
LOG_LEVEL=info             # debug|info|warn|error

# Frontend origin used to build verification links (email)
FRONTEND_ORIGIN=http://localhost:3000
VERIFICATION_FROM=no-reply@clypr.local
VERIFICATION_FROM_NAME="Clypr <no-reply@clypr.local>"

# Telegram settings
# Public bridge must be reachable by Telegram. Set TELEGRAM_BOT_TOKEN to enable replies.
TELEGRAM_BOT_TOKEN=                 # e.g. 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11
TELEGRAM_WEBHOOK_PATH=/telegram/webhook
# Some deployments expect TELEGRAM_WEBHOOK_FULL_URL (useful for setting webhook):
TELEGRAM_WEBHOOK_FULL_URL=https://your-bridge.example.com${TELEGRAM_WEBHOOK_PATH}

# SMTP / Email settings
# If SMTP_* are not set, the bridge will fall back to Ethereal (dev) and print a preview URL in logs.
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
SMTP_SECURE=false            # true for port 465/tls, false for STARTTLS (587)

# Webhook adapter defaults and tuning
WEBHOOK_DEFAULT_URL=
WEBHOOK_DEFAULT_TIMEOUT_MS=30000
WEBHOOK_DEFAULT_RETRIES=2

# Optional: default headers or auth for outbound webhooks can be placed in channel config
# Retry/backoff defaults
WEBHOOK_DEFAULT_BACKOFF_MS=1000

# Optional: A default outbound webhook URL that the webhook adapter will use when a channel has no URL
# Note: prefer explicit channelConfig per-channel in the UI rather than relying on this global default
WEBHOOK_DEFAULT_URL=

# Optional: A flag to redact payloads in logs. Set to 'true' to limit logging of job contents.
REDACT_SENSITIVE_LOGS=true

# Optional: Sentry or monitoring DSN (not required)
SENTRY_DSN=

# Notes:
# - Never commit real API keys or PEM files to source control. Use a secret manager in production.
# - If using TELEGRAM_BOT_TOKEN, ensure the bot webhook is set to TELEGRAM_WEBHOOK_FULL_URL via Telegram's setWebhook API.
#   Example: curl "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook?url=${TELEGRAM_WEBHOOK_FULL_URL}"
# - For local development you can use ngrok to expose PORT and then set TELEGRAM_WEBHOOK_FULL_URL accordingly.
# - FRONTEND_ORIGIN must match where your frontend is hosted so that verification links point to the correct app.